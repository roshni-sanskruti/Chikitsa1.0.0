ALTER TABLE %dbprefix%patient ADD clinic_id INT(11) NULL AFTER wp_user_id;
ALTER TABLE %dbprefix%payment ADD clinic_id INT(11) NULL AFTER level;
ALTER TABLE %dbprefix%clinic CHANGE clinic_id clinic_id INT(11) NOT NULL AUTO_INCREMENT;
ALTER TABLE %dbprefix%clinic ADD clinic_code VARCHAR(6) NULL AFTER clinic_name;
ALTER TABLE %dbprefix%bill_detail ADD service_id INT(11) NOT NULL AFTER sync_status;
ALTER TABLE %dbprefix%visit ADD clinic_id INT(11) NULL AFTER appointment_reason;
CREATE OR REPLACE VIEW %dbprefix%view_payment AS SELECT DISTINCT payment.payment_id,payment.clinic_id,payment.pay_date,payment.pay_mode,payment.cheque_no,payment.pay_amount,patient.patient_id,patient.display_id,contacts.first_name,contacts.middle_name,contacts.last_name   FROM %dbprefix%payment AS payment	       INNER JOIN %dbprefix%patient as patient ON patient.patient_id = payment.patient_id 	   INNER JOIN %dbprefix%contacts as contacts ON contacts.contact_id = patient.contact_id;
CREATE OR REPLACE VIEW %dbprefix%view_patient AS SELECT patient.patient_id,patient.clinic_id,patient.patient_since, patient.display_id,patient.gender,patient.dob, patient.reference_by, patient.followup_date,contacts.display_name,contacts.contact_id,contacts.first_name,contacts.middle_name,contacts.last_name,(SELECT contact_details.detail FROM %dbprefix%contact_details as contact_details WHERE contact_details.contact_id = contacts.contact_id AND contact_details.type='mobile' LIMIT 1) AS phone_number,	   contacts.email   FROM %dbprefix%patient as patient        LEFT JOIN %dbprefix%contacts as contacts ON patient.contact_id = contacts.contact_id;
CREATE OR REPLACE VIEW %dbprefix%view_bill AS SELECT bill.bill_id AS bill_id,               bill.bill_date AS bill_date,				bill.visit_id AS visit_id,				doctor.name AS doctor_name,				visit.doctor_id AS doctor_id,			visit.clinic_id,		clinic.clinic_name,		patient.patient_id AS patient_id,				patient.display_id AS display_id,				contacts.first_name AS first_name,				contacts.middle_name AS middle_name,				contacts.last_name AS last_name,				bill.total_amount AS total_amount,				bill.due_amount AS due_amount,				SUM(bill_payment_r.adjust_amount) AS pay_amount         FROM %dbprefix%bill AS bill   join %dbprefix%visit AS visit ON bill.visit_id = visit.visit_id   join %dbprefix%view_doctor As doctor on visit.doctor_id = doctor.doctor_id   join %dbprefix%patient AS patient on bill.patient_id = patient.patient_id   join %dbprefix%clinic AS clinic on clinic.clinic_id = visit.clinic_id   LEFT OUTER JOIN %dbprefix%bill_payment_r AS bill_payment_r ON bill_payment_r.bill_id = bill.bill_id	   		LEFT OUTER JOIN %dbprefix%payment AS payment on payment.payment_id = bill_payment_r.payment_id 	   		join %dbprefix%contacts AS contacts on contacts.contact_id = patient.contact_id   GROUP BY bill.bill_id,doctor.name,visit.userid, patient.patient_id;
CREATE OR REPLACE VIEW %dbprefix%view_report AS SELECT appointment.appointment_id, 		       appointment.patient_id, 			   CONCAT(IFNULL(view_patient.first_name,''),' ',IFNULL(view_patient.middle_name,''), ' ',IFNULL(view_patient.last_name,'')) as patient_name,	   appointment.doctor_id,	   appointment.clinic_id,	   clinic.clinic_name,	   CONCAT(IFNULL(contacts.first_name,''),' ',IFNULL(contacts.middle_name,''), ' ',IFNULL(contacts.last_name,'')) as doctor_name,	   appointment.appointment_date,	   min(appointment.start_time) as appointment_time,	   max(CASE appointment_log.status WHEN 'Waiting' THEN appointment_log.from_time END) as waiting_in,	   (max(CASE appointment_log.status WHEN 'Consultation' THEN appointment_log.from_time END) - max(CASE appointment_log.status WHEN 'Waiting' THEN appointment_log.from_time END)) as waiting_duration,	   max(CASE appointment_log.status WHEN 'Consultation' THEN appointment_log.from_time END) as consultation_in,	   max(CASE appointment_log.status WHEN 'Complete' THEN appointment_log.from_time END) as consultation_out,	   (max(CASE appointment_log.status WHEN 'Complete' THEN appointment_log.from_time END) - max(CASE appointment_log.status WHEN 'Consultation' THEN appointment_log.from_time END)) as consultation_duration,	   max(CASE appointment_log.old_status WHEN 'Consultation' THEN timediff(appointment_log.to_time,appointment_log.from_time) END) as waiting_out,   max(bill.total_amount) as collection_amount	   FROM  %dbprefix%appointments as appointment	   LEFT JOIN %dbprefix%view_patient as view_patient ON appointment.patient_id = view_patient.patient_id	   LEFT JOIN %dbprefix%bill as bill ON appointment.visit_id = bill.visit_id 	   LEFT JOIN %dbprefix%appointment_log as appointment_log ON appointment.appointment_id = appointment_log.appointment_id	   LEFT JOIN %dbprefix%doctor AS doctor ON doctor.doctor_id = appointment.doctor_id	   LEFT JOIN %dbprefix%contacts AS contacts ON contacts.contact_id = doctor.contact_id	   LEFT JOIN %dbprefix%clinic AS clinic ON clinic.clinic_id = appointment.clinic_id	   GROUP BY appointment.appointment_id,patient_name;
ALTER TABLE %dbprefix%contacts ADD area VARCHAR(25) NULL AFTER address_line_2;
CREATE OR REPLACE VIEW %dbprefix%view_doctor AS SELECT CONCAT(IFNULL(contacts.first_name,''),' ',IFNULL(contacts.middle_name,''),' ',IFNULL(contacts.last_name,'')) AS name,doctor.doctor_id AS doctor_id,doctor.userid AS userid,users.centers AS centers FROM %dbprefix%doctor AS doctor JOIN %dbprefix%contacts AS contacts ON contacts.contact_id = doctor.contact_id JOIN %dbprefix%users AS users ON users.userid = doctor.userid ;
INSERT INTO %dbprefix%menu_access (menu_name, category_name, allow) SELECT menu_name,'Administrator',1 FROM %dbprefix%navigation_menu WHERE menu_name NOT IN ('backup','clinic_detail') AND menu_name NOT IN (SELECT menu_name FROM %dbprefix%menu_access WHERE category_name = 'Administrator');
UPDATE %dbprefix%users SET centers = 1 WHERE centers IS NULL OR centers = "";
UPDATE %dbprefix%patient SET clinic_id = 1 WHERE clinic_id = NULL;
UPDATE %dbprefix%version SET current_version='0.6.0';